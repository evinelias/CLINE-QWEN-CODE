name: Build and Publish CLINE-QWEN-CODE Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@evinelias'

      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund
          cd webview-ui && npm ci --no-audit --no-fund

      - name: Build webview
        run: npm run build:webview

      - name: Build extension
        run: npm run package

      - name: Install VSCE and create VSIX
        run: |
          npm install -g @vscode/vsce
          vsce package --out CLINE-QWEN-CODE.vsix --no-dependencies

      - name: Get package info
        id: package
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "name=CLINE-QWEN-CODE" >> $GITHUB_OUTPUT

      - name: Create GitHub Package for VSIX
        run: |
          # Create a temporary directory for the package
          mkdir -p github-package
          cp CLINE-QWEN-CODE.vsix github-package/
          
          # Create package.json for GitHub Packages
          cat > github-package/package.json << 'EOF'
          {
            "name": "@evinelias/cline-qwen-code-vsix",
            "version": "${{ steps.package.outputs.version }}",
            "description": "CLINE-QWEN-CODE VS Code Extension - VSIX Package",
            "main": "CLINE-QWEN-CODE.vsix",
            "keywords": ["vscode", "extension", "vsix", "ai", "cline", "qwen", "coding-assistant"],
            "author": "evinelias",
            "license": "Apache-2.0",
            "repository": {
              "type": "git",
              "url": "https://github.com/evinelias/CLINE-QWEN-CODE.git"
            },
            "publishConfig": {
              "registry": "https://npm.pkg.github.com"
            },
            "files": ["CLINE-QWEN-CODE.vsix"]
          }
          EOF

      - name: Publish VSIX to GitHub Packages
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd github-package
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload VSIX as Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CLINE-QWEN-CODE-v${{ steps.package.outputs.version }}
          path: CLINE-QWEN-CODE.vsix
          retention-days: 90

      - name: Create GitHub Release with VSIX
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: CLINE-QWEN-CODE.vsix
          draft: false
          prerelease: false
          name: "CLINE-QWEN-CODE v${{ steps.package.outputs.version }}"
          body: |
            ## ğŸš€ Cline AI Assistant with Qwen Code API Integration
            
            Enhanced VS Code extension with **Qwen Code API support** for advanced AI-powered coding assistance.
            
            ### âœ¨ Key Features
            - **Qwen Code Integration**: Specialized AI models for coding tasks
            - **Multi-Provider Support**: Switch between Qwen, Claude, GPT, Gemini
            - **Enhanced Code Generation**: 40+ programming languages supported
            - **Ready-to-Install**: VSIX package for immediate use
            
            ### ğŸ“¦ Installation
            1. Download `CLINE-QWEN-CODE.vsix` from this release
            2. Install via VS Code: Extensions â†’ Install from VSIX
            3. Configure Qwen API in Cline settings
            4. Start coding with enhanced AI assistance!
            
            ### ğŸ“Š Package Details
            - **Size**: ~8.5 MB
            - **Version**: ${{ steps.package.outputs.version }}
            - **Compatibility**: VS Code 1.84.0+
            - **Publisher**: evinelias
          generate_release_notes: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}